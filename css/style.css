* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    --cursor: move;
    background: #cbf0ff;
    overflow: hidden;
    display: flex;
}

#mapsContainer {
    --tile-scale: 13;
    --tile-offset: 0px * var(--tile-scale); /* default 0.4px */
    --tile-size: 162px;
    position: absolute;
    left: 50%;
    top: 30%;
    scale: 1;
    transition: scale 0.3s ease-in-out;
}

#mapsContainer .mapLayer {
    display: block;
    position: absolute;
    transform: rotateX(62deg) rotateZ(45deg);
    z-index: 1000;
}
.mapLayer > div {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
}

.tile {
    /* box-shadow: 0 0 0 1px red; */
    /* background-color: #f775; */
    /* mouse fix x:y 0px-32px */
    position: absolute;
    transform: translate3d(0em, 0em, 0em);
    width: 3.5em;
    height: 3.5em;
    transition: all 1s cubic-bezier(0.22, 0.6, 0.39, 1.42);
}
.tile:hover {
    opacity: 0.5;
}
.tile.hide {
    transform: translate3d(100em, 100em, 0em);
    opacity: 0;
    transition: all 1s cubic-bezier(0.7, -0.4, 0.88, 0.51);
}

.tile > div {
    box-shadow: 0 0 0 1px red;
    transform: rotateZ(-45deg) rotateY(-60deg)
        translate3d(-4.1em, -3.3em, -3.1em);
    width: 10em;
    height: 12em;
    background-size: calc(100% * var(--tile-scale)) 100%;
    background-image: url(../tiles-solid.png);
    background-position: calc(
        var(--tile-offset) - calc(var(--tile-index) - 1) * var(--tile-size)
    );
    background-repeat: no-repeat;
    image-rendering: crisp-edges; /* pixelated */
    transition: height;
    transition-delay: 0;
    cursor: var(--cursor) 16 0, pointer;
}
.tile.hide > div,
.tile.removed > div {
    height: 0;
    transition-delay: 1s;
}

#tools {
    --count-tools: 13;
    position: fixed;
    z-index: 99999;
    bottom: 1em;
    left: 50%;
    transform: translateX(-50%);
    aspect-ratio: var(--count-tools) / 1;
    height: 4em;
    border: 2px solid #cccc;
    display: flex;
    background: #0005;
}
#tools .tool {
    flex: 1;
    height: 100%;
    border: 3px solid #cccc;
    background: var(--tool-image) no-repeat center center / 70%;
    cursor: pointer;
}
#tools .tool:hover {
    background-color: #fff5;
}
#tools .tool.active {
    border-color: #fffc;
    background-color: #fffc;
}

.tile > div.tile-1 {
    --tile-index: 1;
}

.tile > div.tile-2 {
    --tile-index: 2;
}

.tile > div.tile-3 {
    --tile-index: 3;
}

.tile > div.tile-4 {
    --tile-index: 4;
}

.tile > div.tile-5 {
    --tile-index: 5;
}

.tile > div.tile-6 {
    --tile-index: 6;
}

.tile > div.tile-7 {
    --tile-index: 7;
}

.tile > div.tile-8 {
    --tile-index: 8;
}

.tile > div.tile-9 {
    --tile-index: 9;
}

.tile > div.tile-10 {
    --tile-index: 10;
}

.tile > div.tile-11 {
    --tile-index: 11;
}

.tile > div.tile-12 {
    --tile-index: 12;
}

.tile > div.tile-13 {
    --tile-index: 13;
}

.tile > div.tile-14 {
    --tile-index: 14;
}

.tile > div.tile-15 {
    --tile-index: 15;
}

#tools .tool.shovel {
    --tool-image: url(../tools/shovel.png);
}
#tools .tool.axe {
    --tool-image: url(../tools/axe.png);
}
#tools .tool.pickaxe {
    --tool-image: url(../tools/pickaxe.png);
}
#tools .tool.bucket {
    --tool-image: url(../tools/bucket.png);
}
#tools .tool.water {
    --tool-image: url(../blocks/water.png);
}
#tools .tool.shore {
    --tool-image: url(../blocks/shore.png);
}
#tools .tool.sand {
    --tool-image: url(../blocks/sand.png);
}
#tools .tool.grass {
    --tool-image: url(../blocks/grass.png);
}
#tools .tool.dirt {
    --tool-image: url(../blocks/dirt.png);
}
#tools .tool.snow {
    --tool-image: url(../blocks/snow.png);
}
#tools .tool.stone {
    --tool-image: url(../blocks/stone.png);
}
#tools .tool.lava {
    --tool-image: url(../blocks/lava.png);
}
#tools .tool.flowerPoppy {
    --tool-image: url(../blocks/flowerPoppy.png);
}

/* Animations */

@keyframes showTile {
    from {
        transform: translate3d(12em, 12em, 0em);
        opacity: 0;
    }

    to {
        transform: translate3d(0em, 0em, 0em);
        opacity: 1;
    }
}

@keyframes hideTile {
    from {
        transform: translate3d(0em, 0em, 0em);
        opacity: 1;
    }

    to {
        transform: translate3d(12em, 12em, 0em);
        opacity: 0;
    }
}
